<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAADdAAAA3QAAAN0AAADpAAAA/wAAAO8AAADdAAAA3QAA
        AN0AAADdAAAA3QAAAN0AAADdAAAA/QAAAP0AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA7wAA
        AP8AAADpAAAA3QAAAN0AAADdAAAA+wAAAP8AAAD/AAAA4QAAAAAAAAAAAAAAAAAAAFoAAAD/AAAAhwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACHAAAA/wAAAFoAAAAAAAAAAAAAAAAAAADhAAAA/wAAAP8AAADhAAAAAAAAAAAAAAAAAAAAWgAA
        AP8AAACHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAADwAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIcAAAD/AAAAWgAAAAAAAAAAAAAAAAAAAOEAAAD/AAAA/gAAAOMAAAAAAAAAAAAA
        AAAAAABaAAAA/wAAAIcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAPAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAhwAAAP8AAABaAAAAAAAAAAAAAAAAAAAA4gAAAP4AAADrAAAA/AAA
        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
        ED/+D/B//gfgf/8BgP//gAH//+AH//////8=
</value>
  </data>
</root>